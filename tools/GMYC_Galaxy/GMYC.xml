<tool id="GMYC" name="GMYC" version="0.1.0+galaxy0" python_template_version="3.5" profile="21.05">
    <description>Model for species delimitation</description>
    <requirements>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        export QT_QPA_PLATFORM=offscreen &&
        export XDG_RUNTIME_DIR='/home/galaxy/galaxy/database/tmp/runtime-galaxy' &&
        python $__tool_directory__/GMYC.py -t $input1 -pvalue '$pvalue'
          #if '$st':
            '-st'
          #end if
          #if '$ps':
            '-ps'
          #end if
          #if '$pd':
            '-pd'
          #end if
          #if '$sl':
            '-sl'
          #end if
          #if '$sn':
            '-sn'
          #end if
        >$output1
    ]]></command>
    <inputs>
        <param  type="data" name="input1" label="Input ultrametric tree" format="tre,newick" />
        <param name="pvalue" type="float" label="p-value 0-1" value="0.01" help="Set the p-value for likelihood ratio test with TWO degrees of freedom.(default 0.01)" />
        <param name="st" type="boolean" label="Plot species" help="Plot the delimited species on the tree" />
        <param name="ps" type="boolean" label="Print species" help="Print delimited species to log" />
        <param name="pd" type="boolean" label="Optimization" help="Print optimization details" />
        <param name="sl" type="boolean" label="Value plot" help="Show the log likelihood value plot" />
        <param name="sn" type="boolean" label="Lineages" help="Show lineages through time plot" />
    </inputs>
    <outputs>
        <data name="output1" label="${os.path.splitext(os.path.basename($input1.name))[0]}.log" format="txt"/>
        <data name="output2" label="${os.path.splitext(os.path.basename($input1.name))[0]}" format="txt">
            <discover_datasets pattern="__designation__" visible="true" />
          </data>
    </outputs>
    <help><![CDATA[

**PyQt5-GMYC-Project**

The Pyqt5-GMYC project adds a GUI (graphical user interface) as well as a series 
of other functionalities to pGMYC - a Python implementation of GMYC model for species 
delimitation, and makes the program compatible with Python 3. To see the original code of pGMYC, please visit 
(https://github.com/zhangjiajie/pGMYC).

This program delimits species on a rooted ultrametric tree using single threshold GMYC model. The input 
tree should be in Newick format. One new functionality is the integration of a non-ultrametric tree as input file, 
supported using pyr8s (a python implementation of r8s by Stefanos Patmanidis). Non-ultrametric trees will be 
converted into ultrametric using pyr8s. 

Pyqt5-GMYC has features like viewing the partition tree and table, along with exporting all the output files 
generated by the program in a folder. It uses the ete3 library instead of ete2 as originally used in the __GMYC__ program, 
thereby making the program compatible with Python 3.  All codes are available on the repository. The original commandline functionality 
of original GMYC.py remains available and can be used. Pyqt5-GMYC does not implement the support for calculating 
trees from sequence files using the program Fastree as in some other GMYC variants.

Pyqt5-GMYC furthermore implements the output of results in the .spart format, developed to provide a uniform and 
standardized format for species partition results.

**Features**

  - support for non-ultrametric tree as input file
  - Viewing of partition table and tree on the GUI interface
  - Spart format export option

** How to use it**

To open it as the original commandline tool; please type python GMYC.py and follow along the instructions.

To use it as GUI tool; Please type python gm.py on your terminal and follow the instructions.  


This is pGMYC - a python implementation of GMYC model for species delimitation.
Version 1.1 released by Jiajie Zhang on 10-11-2013


This program will delimit species on a rooted ultrametric tree,
using single threshold GMYC model.
The input tree should be in Newick format and must be ultrametric.
Some common programs to infer ultrametric tree are: BEAST, DPPDIV and r8s.
pGMYC needs scipy and matplotlib packages to be installed.

This new version experimentally support multifurcating tree, which
is quite common for many ultrametric tree inference programs.

*Note: pGMYC does not check the ultrametricity of the input tree!*

Questions and bug reports, please send to:
bestzhangjiajie@gmail.com

Options:
    -a alignment        Specify the alignment, GMYC.py will build a UPGMA tree using FastTree.

    -t input_umtree_file        Specify the input ultrametric tree.

    -pvalue (0-1)      Set the p-value for likelihood ratio test with TWO degrees of freedom.(default 0.01).  Note the old split package used three degrees of freedom which has been proven wrong.

    -st     Plot the delimited species on the tree.(default not show)

    -ps     Print delimited species on the screen.(default not show)

    -pd     Print optimization details.(default not)

    -sl     Show the log likelihood value plot.(default not)

    -sn     Show lineages through time plot. (default not)

    ]]></help>

  <citations>
      <citation type="bibtex">
"J. Zhang, P. Kapli, P. Pavlidis, A. Stamatakis: A General
--Species Delimitation Method with Applications to Phylogenetic Placements.
--Bioinformatics (2013), 29 (22): 2869-2876."
    </citation>
  </citations>
</tool>